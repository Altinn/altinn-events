name: Code test and analysis
on:
  push:
    branches: [ main ]
    paths:
    - 'src/**'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'test/Altinn.Platform.Events.Tests/**'
      - .github/workflows/build-and-analyze.yml
  workflow_dispatch:
jobs:
  build-test-analyze:
    name: Build, test & analyze
    if: ((github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) || github.event_name == 'push') && github.repository_owner == 'Altinn' && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
            dotnet-version: 9.0.x
      - name: Set up JDK 11
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'microsoft'
          java-version: 17
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Build & Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"Altinn_altinn-events" /o:"altinn" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cpd.exclusions="**/Swagger/*Filter.cs,**/Migration/**/*.sql" /d:sonar.coverage.exclusions="**/Migration/"

          dotnet build Altinn.Platform.Events.sln -v q
          dotnet test Altinn.Platform.Events.sln \
          -v q \
          --collect:"XPlat Code Coverage" \
          --results-directory TestResults/ \
          --logger "trx;" \
          --configuration release \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - name: Complete sonar analysis
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: TestResults
          path: '**/TestResults/*.trx'
      - name: Process .NET test result
        if: always()
        uses: NasAmin/trx-parser@359b39f5319df4478443ef1f0eb952f159896995 # v0.7.0
        with:
          TRX_PATH: ${{ github.workspace }}/TestResults
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
