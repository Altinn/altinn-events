name: Regression test - AT

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      TOKENGENERATOR_USERNAME:
        required: true
      TOKENGENERATOR_USERPASSWORD:
        required: true
      USER_ID:
        required: true
      PARTY_ID:
        required: true
      PERSON_NUMBER:
        required: true
      WEBHOOK_ENDPOINT:
        required: true

jobs:
  regression-tests:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v4
    - name: Run app-events regression tests
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/app-events.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e app=apps-test -e userId=${{ secrets.USER_ID }} -e partyId=${{ secrets.PARTY_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }}
    - name: Run events regression tests (POST)
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/events/post.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }}
    - name: Run events regression tests (GET)
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6/src/tests/events/get.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }}
    - name: Run subscription regression tests
      if: always()
      uses: grafana/k6-action@v0.3.1
      with:
        filename: test/k6//src/tests/subscriptions.js
        flags: -e runFullTestSet=true -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e app=apps-test -e webhookEndpoint=${{ secrets.WEBHOOK_ENDPOINT }}
    - name: Build failure report
      if: failure()
      run: |

          report=":warning: Events regression test failure in ${{ inputs.environment }} :warning: \n"
          report+="\n Workflow available here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "stepreport="$report >> $GITHUB_ENV
    - name: Report failure to Slack
      if: failure()
      id: slack
      uses: slackapi/slack-github-action@v1.27.1
      with:
        payload: |
            {
              "text": "${{ env.stepreport }}"
            }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}

