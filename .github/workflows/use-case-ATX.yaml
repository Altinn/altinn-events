name: Use Case - AT

on:
  workflow_dispatch:
  schedule:
  - cron: '*/15 * * * *'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        environment: [AT21, AT22, AT23, AT24]
    environment: ${{ matrix.environment }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3.5.0
    - name: Install xk6 and dependencies
      run: |
        cd test/k6
        export PATH=${PATH}:/home/runner/go/bin
        go install go.k6.io/k6@latest
        k6 version
        go install go.k6.io/xk6/cmd/xk6@latest
        xk6 build --with github.com/grafana/xk6-output-timescaledb
#   - name: Test with grafana k6 task
#     uses: grafana/k6-action@v0.2.0
#     with:
#       filename: test/k6/src/tests/events.js
#       flags: -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }}
    - name: Run app-events use case tests
      if: always()
      run:  |
              cd test/k6
              ./k6 run src/tests/app-events.js \
              -e env=${{ vars.ENV }} \
              -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} \
              -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} \
              -e app=apps-test \
              -e userId=${{ secrets.USER_ID }} \
              -e partyId=${{ secrets.PARTY_ID }} \
              -e personNumber=${{ secrets.PERSON_NUMBER }}
              -o timescaledb=${{ secrets.PG_CONNECTIONSTRING }}
    - name: Run events use case tests
      if: always()
      run:  |
              cd test/k6
              ./k6 run src/tests/events.js \
              -e env=${{ vars.ENV }} \
              -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} \
              -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} \
              -o timescaledb=${{ secrets.PG_CONNECTIONSTRING }}
    - name: Run subscription use case tests
      if: always()
      run:  |
              cd test/k6
              ./k6 run src/tests/subscriptions.js \
              -e env=${{ vars.ENV }} \
              -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} \
              -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} \
              -e app=apps-test \
              -e webhookEndpoint=${{ secrets.WEBHOOK_ENDPOINT }} \
              -o timescaledb=${{ secrets.PG_CONNECTIONSTRING }}

    - name: Build failure report
      if: failure()
      run: |
            report=":warning: Events use case test failure in ${{ matrix.environment }} :warning: \n"
            report+="\n Workflow available here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            echo "stepreport="$report >> $GITHUB_ENV

    - name: Report failure to Slack
      if: failure()
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
            {
              "text": "${{ env.stepreport }}"
            }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
