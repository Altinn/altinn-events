name: Use Case - TT02

on:
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:
  schedule:
  - cron: '*/15 * * * *'

jobs:
  test:
    environment: TT02
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run app-events use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/app-events.js -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e app=apps-test -e userId=${{ secrets.USER_ID }} -e partyId=${{ secrets.PARTY_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }}
    - name: Run events use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/events/post.js -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }}
              docker-compose run k6 run /src/tests/events/get.js -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }}
    - name: Run subscription use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/subscriptions.js -e env=${{ vars.ENV }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e app=apps-test -e webhookEndpoint=${{ secrets.WEBHOOK_ENDPOINT }}
    - name: Build failure report
      if: failure()
      run: |
          report=":warning: Events use case test failure in ${{ environment }} :warning: \n"
          report+="\n Workflow available here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "stepreport="$report >> $GITHUB_ENV
    - name: Report failure to Slack
      if: failure()
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
            {
              "text": "${{ env.stepreport }}"
            }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}

